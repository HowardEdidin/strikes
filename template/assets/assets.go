// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 10, 10, 21, 39, 43, 926186155, time.UTC),
		},
		"/.DS_Store": &vfsgen۰CompressedFileInfo{
			name:             ".DS_Store",
			modTime:          time.Date(2018, 10, 10, 21, 39, 43, 926772926, time.UTC),
			uncompressedSize: 6148,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x3d\x6e\x84\x30\x10\x85\xdf\x38\x14\x8e\xd2\xb8\x4c\xe9\x2b\xe4\x06\x16\x22\x27\xc8\x05\xf2\x43\x52\x11\x21\x91\xa4\xa7\xca\xb9\xf6\x68\x2b\xe4\xb7\x02\x09\x90\x68\x56\xcb\xae\xde\x27\x59\x5f\xc1\x8c\x41\x14\x9e\x19\x03\xb0\xf2\xaf\x7e\x02\x02\x00\x8f\x6c\xfc\x63\x11\xcf\x35\xc3\xd1\x96\x57\x00\xde\xf0\x85\x16\x1d\xbe\xeb\x9f\xe5\xbd\x66\x0c\xb9\xf7\xf8\xc5\x27\x3a\x74\xd3\xfc\x8f\xe6\xbd\x6d\x1b\xdb\xb8\x8d\x10\x42\x08\x21\x36\xc2\xe2\xea\x1f\x2e\xfd\x21\x42\x88\xdd\x31\x9c\x0f\x91\x4e\x74\x9f\x6d\x7c\xee\xe8\x62\x92\x13\xe8\x48\x27\xba\xcf\x36\xc6\x39\xba\xa0\x3d\x1d\xe8\x48\x27\xba\xcf\xe6\xa1\x65\x1c\x3e\x8c\x6f\x36\x4e\x28\x16\xe8\x48\xa7\xf3\xfc\x1b\x21\xae\x9d\xbb\xac\x30\xd4\xff\xe7\xf5\xf9\x5f\x08\x71\xc3\x58\x51\xbd\x54\xe5\x38\x10\xcc\x70\x6c\x04\x5e\x19\x73\x38\x25\xae\x34\x02\x2e\x5f\x18\x3e\x62\x8c\x53\x33\x20\xc4\x8e\x38\x06\x00\x00\xff\xff\x7f\x75\x69\xbc\x04\x18\x00\x00"),
		},
		"/terraform": &vfsgen۰DirInfo{
			name:    "terraform",
			modTime: time.Date(2018, 10, 10, 21, 39, 43, 922471538, time.UTC),
		},
		"/terraform/.DS_Store": &vfsgen۰CompressedFileInfo{
			name:             ".DS_Store",
			modTime:          time.Date(2018, 10, 10, 21, 39, 49, 150820502, time.UTC),
			uncompressedSize: 6148,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x31\x4e\x80\x40\x10\x45\xff\xac\x68\x36\xb1\xd9\xd2\x72\xaf\xe0\x0d\x36\x04\x4f\xe0\x05\x14\x68\x4c\x30\x14\xc4\x9e\xca\x73\x79\x34\x83\xfb\x0d\x18\x96\xc2\xc2\x88\xe6\xbf\x04\x5e\xc1\xcc\x40\x28\x76\x67\x16\x80\xd5\x2f\xfd\x2d\x10\x00\x78\x64\xe3\x15\x45\x3c\xaf\x1d\x6e\x63\xfb\xa8\xd1\xf5\x53\x37\xb4\xe3\x38\x58\xb9\x54\xb9\xc6\x25\x5a\x3c\x62\xc2\xd3\xd7\xfc\x2b\x74\x18\x31\xe1\x79\xb9\x7f\xbb\xb0\x10\x42\x08\x21\x8a\x70\x2f\xf5\xd7\xbf\xfd\x21\x42\x88\xd3\xb1\xac\x0f\x91\x4e\xf4\x9c\x6d\x7c\xee\xe8\x6a\x93\x13\xe8\x48\x27\x7a\xce\x36\xc6\x39\xba\xa2\x3d\x1d\xe8\x48\x27\x7a\xce\xe6\xa2\x65\x1c\x3e\x8c\x6f\x36\x4e\x28\x16\xe8\x48\xa7\x9f\xf9\x37\x42\xfc\x75\x2e\xb2\xc2\xb2\xff\xdf\x1d\xcf\xff\x42\x88\x7f\x8c\x55\xcd\x7d\x53\xaf\x03\xc1\x0e\xc7\x46\xe0\x81\x31\x6f\x9f\x89\x07\x8d\x80\xcb\x07\x86\x37\x58\xe3\xd4\x0c\x08\x71\x22\xde\x03\x00\x00\xff\xff\x82\x45\xaa\x6b\x04\x18\x00\x00"),
		},
		"/terraform/basic": &vfsgen۰DirInfo{
			name:    "basic",
			modTime: time.Date(2018, 10, 7, 0, 2, 58, 270451361, time.UTC),
		},
		"/terraform/basic/NOTE.txt": &vfsgen۰CompressedFileInfo{
			name:             "NOTE.txt",
			modTime:          time.Date(2018, 10, 9, 4, 30, 14, 547188827, time.UTC),
			uncompressedSize: 272,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x4d\x4a\x04\x31\x10\x46\xf7\x39\x45\xcd\x05\xd2\xfb\xde\x29\xe8\xcc\x4a\x06\x11\x5c\x97\xe9\x6f\x9c\x30\xe9\xa4\x48\x55\x94\x36\xf4\xdd\xc5\x1e\xff\x76\xf5\x1e\x8f\x82\xaf\x77\x7f\xe4\x70\xe1\x57\x3c\xf0\x8c\x75\x25\xb9\x12\x69\x0b\x01\xaa\xa7\x96\xd2\x42\x13\x24\x95\x05\xd3\xce\xb9\x63\x02\x2b\xa8\xe2\x84\x4a\x76\xc6\x76\x6b\x69\x35\x40\x47\x72\xee\xf1\x1b\x68\x5f\x4b\x13\xa2\x91\x7a\xf7\x3f\x72\x73\x4f\x98\x25\xb1\x61\x5d\xdd\xcd\x47\xab\xa0\xfb\x96\x83\xc5\x92\xf5\x1a\x6f\xf2\xd7\xfd\xab\xdd\xbe\x90\x15\x3a\x9b\x89\x8e\xc3\xd0\xbb\xbf\xcb\x6f\xb1\x96\x3c\x23\xdb\x2d\xeb\x36\xe1\xaf\x67\x11\xcf\x5f\xbf\xde\xf1\xa2\xd1\xa0\x3e\xc3\x06\x96\x38\x1c\x90\x52\x79\x2e\x35\x4d\xce\x1d\x58\x64\x21\xb5\x1a\x2f\xd0\x9d\xfb\x0c\x00\x00\xff\xff\x38\x7d\x4f\xf9\x10\x01\x00\x00"),
		},
		"/terraform/basic/manifest.yaml": &vfsgen۰CompressedFileInfo{
			name:             "manifest.yaml",
			modTime:          time.Date(2018, 10, 6, 14, 30, 1, 205295059, time.UTC),
			uncompressedSize: 325,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x31\x6b\xc3\x30\x10\x85\xf7\xfb\x15\x07\x99\x6b\xd2\xd5\x5b\xa1\x74\x0c\xc1\xc9\xd4\xed\xe2\x9c\xd3\x6b\x64\x4b\x9c\x2e\x86\x34\xdc\x7f\x2f\x96\x5b\x94\x4d\x9f\x3e\xe9\x3d\xde\x06\x0f\xa6\x72\xe5\x8c\x89\xfa\x2b\x5d\x18\x47\x9a\x64\xe0\x6c\x38\x48\x60\x80\x89\x46\x6e\xf1\xf1\x68\xf6\xab\xdf\xd1\xc8\xee\x70\xe6\xdc\xab\x24\x93\x38\x15\xfb\x5e\xd9\x1d\x81\x6e\xf6\x15\xb5\x98\xb7\x72\x74\x87\xa4\xf1\x9b\x7b\xdb\xd3\xe5\x2f\xb0\x72\xb5\x1d\xa7\xf8\x6c\x17\x76\x07\xd8\x60\xc7\x81\x29\x33\xc0\xcc\x9a\x4b\xed\x6b\xb3\x6d\xb6\xcb\xc7\x59\xce\xac\xc7\x7b\xe2\x16\x8f\xac\x4a\x43\xd4\x11\x74\x7d\xbf\x8b\xb6\xd6\x75\x95\xdd\x61\x96\x2c\x27\x09\x62\xf7\x16\xd3\xed\x14\xa4\x87\x6c\xa4\x76\x28\x2b\x5a\xb4\xff\x9c\xc6\x06\xf8\x91\xf4\x21\xa1\x4c\xcf\x2d\xbc\x2c\x69\x9f\xf5\xca\xfd\x37\x00\x00\xff\xff\x00\x5a\x02\xb7\x45\x01\x00\x00"),
		},
		"/terraform/basic/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 7, 0, 6, 9, 510095466, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x20\x61\x6e\x64\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74"),
		},
		"/terraform/basic/terraform.tf": &vfsgen۰CompressedFileInfo{
			name:             "terraform.tf",
			modTime:          time.Date(2018, 10, 6, 14, 35, 36, 827505464, time.UTC),
			uncompressedSize: 3203,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x10\x4c\x0f\xbb\x40\x22\x3b\xfb\x71\xe8\x02\x39\xa4\xa9\x93\x35\xb2\x71\x0c\xcb\x41\x50\x2c\x0a\x81\x96\xc6\x32\x6b\x89\x24\x48\xca\x89\x63\x68\x7f\xfb\x82\x22\xad\x2f\xcb\x49\x83\xd6\x27\x8b\x33\x7c\x7c\xf3\x66\x86\xc3\x13\x14\x80\xdc\xd0\x08\xd0\x54\x52\x16\x51\x91\x82\xb7\x21\x92\x92\x45\x0a\x08\xab\x7c\xa1\x22\x49\x85\xa6\x9c\x85\x34\xc6\x68\x57\x34\xac\x51\x4a\x81\xe9\xa3\xeb\x0a\x22\x09\xba\x63\xd3\xc0\x48\xbd\xc7\x3b\x41\x33\x50\x3c\x97\x11\xa0\x1b\xc9\x73\xd1\xf0\x94\xce\x10\x26\xc6\x80\xd1\xce\x43\x28\x86\x25\xc9\x53\x8d\x2e\x10\xde\xed\xfc\x29\x89\xd6\x24\x81\x09\xc9\xa0\x28\xce\x64\x82\xbd\xe6\x49\x29\x8f\x88\xe1\x7d\xb0\xf3\x1b\x11\x84\x01\x51\xba\xed\xaf\x49\x12\x32\x92\xc1\x9b\x27\x99\x6d\x8d\x7d\xc0\x36\x54\x72\x96\x99\x90\x17\x44\xc1\x3b\x40\x4c\xf4\x82\x2b\xaa\xb9\xdc\xa2\x00\xb4\xa6\x2c\x51\x5e\x4b\x83\xbd\xd9\x42\xe7\x92\x5a\xe4\x16\xf6\x4a\x6b\xa1\xfe\x1a\x0c\x94\x96\x74\x0d\xca\x6c\x82\x8f\x00\xdf\xfe\x7c\xfe\xdd\x5f\xa4\x7c\xe1\x47\x5c\x82\xff\x44\x59\xcc\x9f\x94\xcf\x40\x0f\x6a\xdc\x81\x23\x32\x25\x11\x59\x27\x80\x54\x0f\x0b\x61\x89\x37\x02\x3b\x41\xf0\x4c\x32\x53\x2b\xe6\x7f\x93\x0a\xa4\x29\x3f\x7b\xe2\x32\x8d\x3b\x32\xed\x41\x36\x20\x55\x95\x95\x63\x38\xe7\xfe\xd0\x1f\xf6\xef\x7f\xa1\xa2\x24\x12\x0e\xf7\x4a\x34\x41\xfa\xe8\xf8\x2f\x54\xb8\x28\x03\x01\x11\x5d\x6e\x91\x5e\x01\x4a\x09\x4b\x72\x92\x00\xe2\xcb\xf2\xdb\x1d\xd0\xac\x20\xe7\xd1\x23\x79\xcc\x35\x83\xb2\x80\x3c\x21\xf9\x86\xc6\x20\x11\x26\x2f\xb9\x04\x99\x39\xf7\xaa\x3b\x8c\xff\x87\xdd\x86\x48\xbf\x5a\x2a\x70\xc3\xc3\xf6\xc9\x81\x97\x5d\xb6\x9e\x9d\x3e\xac\x7d\x3b\x06\xeb\x5d\xf5\x58\xed\x57\x2d\xd9\xc2\xdb\xf7\x56\xc5\x39\xec\x76\x1b\xd6\xa0\xb4\x8d\xc4\xa8\x6d\xc2\xaf\xd1\xda\xce\xe5\xa1\xfb\x6e\xab\x9d\xf6\x2b\xa5\x59\x93\x44\x39\x15\x4b\xb8\x9a\x98\xeb\xba\xd2\xab\x68\x73\x93\x84\xc5\x3c\x0b\x4d\x59\xb3\x04\x9b\xdb\x68\xb9\xa4\xcf\x96\x54\x0a\x2c\xd1\x2b\x74\x81\xfe\xf0\x10\x52\x26\xad\x24\x45\x17\x68\x49\x52\x65\xea\x20\x17\x02\x64\xf5\xdd\x1b\xb1\xd2\x5c\x9a\x82\x22\x51\xc4\x73\xa6\xfb\x43\xee\xfe\x4a\xde\x12\x44\x4a\x22\xf8\xc5\xf0\xef\xed\xfe\x53\x7c\x86\x4f\x31\xfe\xb5\x50\xe4\xc3\xae\x15\x85\x6f\x63\x30\x0a\xe6\xa9\x4d\x6e\x5b\xcc\xb0\x3e\xba\x3c\xab\x3f\x3f\xbe\xa1\xea\x57\xba\x55\xe2\xf7\xd2\x7d\x0d\xa2\x95\x24\xa7\x44\xa8\x29\xc8\x2e\x4c\xa0\x09\x8b\x89\x8c\x9b\x7e\x46\x07\x6a\xf7\x87\x7a\x2b\xca\xac\xfe\x33\x0b\x70\x79\xf3\x09\x60\xb1\x0a\xcb\x82\xf8\x17\xf7\x69\x80\xbf\xf6\xe7\x85\x08\x11\x2a\x3b\x93\x42\x91\x12\xf6\x66\x62\xaa\x5a\xea\xcd\x45\x51\x62\x1c\x11\xe9\x7d\xfa\xf4\x65\xea\xfb\x93\xb4\xa6\x2c\xee\xa1\x7e\x9d\xb3\xc8\x9c\x70\x29\x04\xf6\x4c\x2d\xaf\x73\xd7\x28\x65\x1a\x2e\x10\xfe\xbc\x65\x24\xa3\x51\xd9\xda\x48\xd1\x97\xf2\xd0\x2f\xe7\x3d\x0d\xd3\x90\xb0\x4a\x0c\x65\x8a\x26\x2b\xad\x7e\x54\x46\x42\x5f\x11\xd1\x4c\xd3\x5c\xfd\xb8\x46\x4d\xe2\x65\x45\x59\xf8\x47\x58\xb8\x0b\xfc\x8a\xab\x8c\xab\xcf\x9f\x7a\xae\x09\xca\x34\x24\x20\x31\xc2\xf5\x90\xcc\xa8\xa9\xbf\xf3\xe1\x70\x38\xb4\xdf\xe4\x19\x5d\xa0\x8f\xe6\xd7\xaf\xdc\xd2\x65\xc3\x48\xf8\x7d\x37\xc2\x9b\xba\x99\xbc\xbe\xd2\xa2\x3f\xa1\x06\xdf\x7b\x5d\x74\x3b\xcc\x4c\x8a\x1e\x8c\xae\x9b\x45\x71\x43\x66\x7f\x7b\x46\x9c\x31\xb0\x92\xd9\xee\x6e\x63\x74\x2e\x59\x0b\x21\x24\xcd\x88\xdc\x1e\xee\x2d\x91\xdd\x03\xc1\xe0\xfc\xf7\x5b\xd9\x12\x96\x88\x7d\x97\xb8\xc4\xe2\xcb\xe9\x74\x3c\x09\xc6\x37\x7f\xcf\x83\x70\x3c\x09\xe6\xb3\x87\xbb\xd1\x64\x7e\x39\x1f\xdf\x4f\x6e\x47\x5f\xf0\x41\x24\x07\xfd\xe0\xa2\x61\x4a\xcb\xdc\xa4\xcc\x5a\xd7\xb0\xb5\x33\x14\xe1\xeb\x87\xc9\x95\x81\x0b\xc2\xc7\xfb\xd9\xed\x68\x16\xce\x1e\x26\xf3\xf1\xdd\x08\x37\x46\x9c\x7b\x20\xb8\x2d\x27\x68\xbe\xa2\x0a\x25\xdc\xc8\xa0\x39\x8a\x56\x84\x25\x80\x28\xd3\x1c\x3d\x8e\x3e\x05\xe3\xf9\xc8\x80\x84\xd7\xb3\xfb\xbb\x70\x7a\x79\x75\x7b\x79\x33\xb2\x67\x1d\xb3\xe2\xe6\xcc\x3d\x78\x0a\x16\xd6\xd2\x7c\x9e\x15\x83\xf6\x9a\x13\xb3\x18\xb8\x85\x8e\xb9\x7e\x4c\xb9\xf9\x7b\x78\x75\xbf\x5a\x0d\xf8\xf4\xd8\x0b\xe2\xc0\xdc\x57\x09\xf8\x2b\xf2\x0a\xef\xff\x00\x00\x00\xff\xff\xe3\x8c\x9d\x2f\x83\x0c\x00\x00"),
		},
		"/terraform/basic/values.hcl": &vfsgen۰CompressedFileInfo{
			name:             "values.hcl",
			modTime:          time.Date(2018, 10, 8, 4, 49, 42, 668071870, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\xc8\x5b\x68\xbc\x40\x2c\x40\xe2\x0a\x88\x1b\x44\x93\xe4\xe3\xba\x4d\x3c\xd1\x78\xdc\x52\x45\xb9\x3b\xaa\x2a\x54\x02\x95\x60\x3f\xff\xbf\xf7\xe7\xc0\x1a\xb9\x1d\x40\x0e\xe9\x10\x55\xd2\x88\x64\x4d\xcb\x19\x4d\xe2\x11\x8e\xe6\x8a\xa8\xc7\x3b\x97\xc1\xe8\x85\xdc\x3c\xd7\x6f\xdc\xed\x39\xe0\x95\x47\x2c\x8b\xab\x96\xea\xda\xa1\xc8\x52\xb4\x43\x13\x54\xca\xf4\x67\x78\xa3\xc1\x91\xf7\xd4\x9e\xbe\xae\xee\x69\x5d\x41\x31\x93\x6d\x41\x37\xe5\xe8\x8e\x36\x1a\xaa\xa5\x5a\x19\x4c\x92\xa3\x89\x9e\x2e\x77\x45\xe3\x45\x63\x25\xb2\x35\x9b\xf2\xb3\xf7\xd9\x34\xee\x91\xcf\x21\x3c\x01\xbb\xc7\x8f\x87\xba\x1d\xa4\xad\x3b\x51\xd4\xc7\x98\x7a\x39\xe6\x3a\xc1\xfc\xb5\xd7\xbb\x35\x71\x90\x8e\x2d\x4a\xfa\xb5\x76\xc7\x13\x27\x70\xb6\x1f\x01\xe3\xf0\xff\xdf\x7e\x07\x71\x0a\x85\x03\x6e\xec\xe9\xc5\x12\xce\x9c\xcf\x00\x00\x00\xff\xff\x75\x91\xd9\x7b\xcf\x01\x00\x00"),
		},
		"/terraform/cosmos": &vfsgen۰DirInfo{
			name:    "cosmos",
			modTime: time.Date(2018, 10, 10, 21, 40, 14, 172724753, time.UTC),
		},
		"/terraform/cosmos/NOTE.txt": &vfsgen۰CompressedFileInfo{
			name:             "NOTE.txt",
			modTime:          time.Date(2018, 10, 9, 4, 30, 14, 547188827, time.UTC),
			uncompressedSize: 272,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x4d\x4a\x04\x31\x10\x46\xf7\x39\x45\xcd\x05\xd2\xfb\xde\x29\xe8\xcc\x4a\x06\x11\x5c\x97\xe9\x6f\x9c\x30\xe9\xa4\x48\x55\x94\x36\xf4\xdd\xc5\x1e\xff\x76\xf5\x1e\x8f\x82\xaf\x77\x7f\xe4\x70\xe1\x57\x3c\xf0\x8c\x75\x25\xb9\x12\x69\x0b\x01\xaa\xa7\x96\xd2\x42\x13\x24\x95\x05\xd3\xce\xb9\x63\x02\x2b\xa8\xe2\x84\x4a\x76\xc6\x76\x6b\x69\x35\x40\x47\x72\xee\xf1\x1b\x68\x5f\x4b\x13\xa2\x91\x7a\xf7\x3f\x72\x73\x4f\x98\x25\xb1\x61\x5d\xdd\xcd\x47\xab\xa0\xfb\x96\x83\xc5\x92\xf5\x1a\x6f\xf2\xd7\xfd\xab\xdd\xbe\x90\x15\x3a\x9b\x89\x8e\xc3\xd0\xbb\xbf\xcb\x6f\xb1\x96\x3c\x23\xdb\x2d\xeb\x36\xe1\xaf\x67\x11\xcf\x5f\xbf\xde\xf1\xa2\xd1\xa0\x3e\xc3\x06\x96\x38\x1c\x90\x52\x79\x2e\x35\x4d\xce\x1d\x58\x64\x21\xb5\x1a\x2f\xd0\x9d\xfb\x0c\x00\x00\xff\xff\x38\x7d\x4f\xf9\x10\x01\x00\x00"),
		},
		"/terraform/cosmos/manifest.yaml": &vfsgen۰CompressedFileInfo{
			name:             "manifest.yaml",
			modTime:          time.Date(2018, 10, 6, 14, 30, 1, 205295059, time.UTC),
			uncompressedSize: 325,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x31\x6b\xc3\x30\x10\x85\xf7\xfb\x15\x07\x99\x6b\xd2\xd5\x5b\xa1\x74\x0c\xc1\xc9\xd4\xed\xe2\x9c\xd3\x6b\x64\x4b\x9c\x2e\x86\x34\xdc\x7f\x2f\x96\x5b\x94\x4d\x9f\x3e\xe9\x3d\xde\x06\x0f\xa6\x72\xe5\x8c\x89\xfa\x2b\x5d\x18\x47\x9a\x64\xe0\x6c\x38\x48\x60\x80\x89\x46\x6e\xf1\xf1\x68\xf6\xab\xdf\xd1\xc8\xee\x70\xe6\xdc\xab\x24\x93\x38\x15\xfb\x5e\xd9\x1d\x81\x6e\xf6\x15\xb5\x98\xb7\x72\x74\x87\xa4\xf1\x9b\x7b\xdb\xd3\xe5\x2f\xb0\x72\xb5\x1d\xa7\xf8\x6c\x17\x76\x07\xd8\x60\xc7\x81\x29\x33\xc0\xcc\x9a\x4b\xed\x6b\xb3\x6d\xb6\xcb\xc7\x59\xce\xac\xc7\x7b\xe2\x16\x8f\xac\x4a\x43\xd4\x11\x74\x7d\xbf\x8b\xb6\xd6\x75\x95\xdd\x61\x96\x2c\x27\x09\x62\xf7\x16\xd3\xed\x14\xa4\x87\x6c\xa4\x76\x28\x2b\x5a\xb4\xff\x9c\xc6\x06\xf8\x91\xf4\x21\xa1\x4c\xcf\x2d\xbc\x2c\x69\x9f\xf5\xca\xfd\x37\x00\x00\xff\xff\x00\x5a\x02\xb7\x45\x01\x00\x00"),
		},
		"/terraform/cosmos/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 7, 0, 6, 7, 651684308, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x2c\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74\x2c\x20\x61\x6e\x64\x20\x43\x6f\x73\x6d\x6f\x73\x44\x42"),
		},
		"/terraform/cosmos/terraform.tf": &vfsgen۰CompressedFileInfo{
			name:             "terraform.tf",
			modTime:          time.Date(2018, 10, 10, 21, 43, 38, 277658729, time.UTC),
			uncompressedSize: 3875,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4d\x6f\x1b\x37\x13\xbe\xeb\x57\x10\x74\x0e\xef\x0b\xc4\x6b\x25\x6d\x0f\x29\xe0\x83\x1d\x2b\xae\x91\x46\x31\x24\x05\x41\x50\x04\x04\xc5\x1d\xad\x19\x73\x49\x82\xe4\x2a\x96\x8d\xed\x6f\x2f\xf8\xa1\xfd\x90\x56\x4e\x0c\x47\x27\x2f\x67\xf8\x70\xe6\x99\x67\xc8\xf1\x11\x9a\x83\x59\x73\x06\xe8\xda\x70\xc9\xb8\x16\x30\x5a\x53\xc3\xe9\x52\x00\xc2\xb6\x5a\x5a\x66\xb8\x76\x5c\x49\xc2\x73\x8c\x1e\xea\x8e\x95\x09\x0e\xd2\x1d\x5c\xb7\xc0\x0c\xb8\x1d\x9b\x03\x49\xdb\x3d\xa3\x23\x34\x03\xab\x2a\xc3\x00\x5d\x1a\x55\xe9\x8e\xa7\x49\x06\x52\x78\x03\x46\x0f\x23\x84\x72\x58\xd1\x4a\x38\x74\x8a\xf0\xc3\x43\x76\x4d\xd9\x2d\x2d\x60\x4a\x4b\xa8\xeb\x63\x53\xe0\x51\xf7\x24\xa1\x18\xf5\x71\xef\xed\xfc\x46\x35\x95\x40\xad\xeb\xfb\x3b\x5a\x10\x49\x4b\xf8\xe1\x49\x7e\x5b\x67\x1f\xc8\x35\x37\x4a\x96\x3e\xe5\x25\xb5\xf0\x04\x10\x9f\xbd\x56\x96\x3b\x65\x36\x68\x0e\xce\x71\x59\xd8\x51\x8f\x83\xad\x39\x42\x57\x86\x47\xe4\x1e\xf6\x8d\x73\xda\xfe\x79\x72\x62\x9d\xe1\xb7\x60\xfd\x26\x78\x03\xf0\xed\x8f\xbb\xdf\xb2\xa5\x50\xcb\x8c\x29\x03\xd9\x77\x2e\x73\xf5\xdd\x66\x12\xdc\x49\x8b\x7b\x92\x02\xb9\xa6\x8c\xde\x16\x80\xec\x40\x14\x3a\x06\xde\x49\xec\x08\xc1\x1d\x2d\xbd\x56\xfc\xdf\xdd\x50\x40\x08\x75\xfc\x5d\x19\x91\xef\xd0\xb4\x05\x59\x83\xb1\x4d\x55\x0e\xe1\xbc\xca\xc6\xd9\x78\x78\xff\x3d\xd7\x21\x10\x32\xde\x32\xd1\x05\x19\x0a\x27\xbb\xe7\x3a\x65\x39\xd7\xc0\xf8\x6a\x83\xdc\x0d\x20\x41\x65\x51\xd1\x02\x90\x5a\x85\xef\x74\x40\x57\x41\xc9\x63\x80\xf2\x5c\x39\x09\x41\x40\x23\x6d\xd4\x9a\xe7\x60\x10\xa6\xf7\x95\x01\x53\x26\xf7\xa6\x3b\xbc\xff\x8b\x87\x35\x35\x59\xb3\x54\xe3\x8e\x47\xec\x93\x3d\xaf\xb8\x1c\x3d\x77\xfa\xb0\xf5\xdd\x31\x44\xef\xa6\xc7\x5a\xbf\x66\x29\x0a\x6f\xdb\x5b\x4d\xcc\x64\xb7\xdb\xb0\x03\xeb\x62\x26\x9e\x6d\x9f\x7e\x8b\xd6\x77\x0e\x87\x6e\xbb\xad\x75\xda\xae\x04\xb3\xa3\x85\x4d\x2c\x06\xb8\x36\xb0\xd4\x75\xc1\xab\xee\xc7\x66\xa8\xcc\x55\x49\xbc\xac\x65\x81\xfd\x6d\xb4\x5a\xf1\xbb\x18\x94\x00\x59\xb8\x1b\x74\x8a\x7e\x1f\x21\x64\x7d\x59\xa9\x40\xa7\x68\x45\x85\xf5\x3a\xa8\xb4\x06\xd3\x7c\x0f\x66\x6c\x9d\x32\x5e\x50\x94\x31\x55\x49\x37\x9c\xf2\xee\x2f\xc4\x6d\x40\x0b\xca\xe0\x7f\x3e\xfe\xc1\xee\x7f\x89\x8f\xf1\x4b\x8c\xff\x5f\x5b\xfa\xe2\xa1\x97\x45\x16\x73\xf0\x0c\x56\x22\x16\xb7\x4f\x26\x69\x8f\x0e\x67\x0d\xd7\x27\xf3\xa1\x66\x0d\x6f\x0d\xf9\x83\xe1\x3e\x06\xd1\x2b\x52\x62\x82\x38\x0e\x66\x17\x66\xee\xa8\xcc\xa9\xc9\xbb\x7e\x9e\x07\x1e\xf7\x13\xb7\xd1\xa1\xaa\x7f\xcf\xe6\x38\xdc\x7c\x1a\x64\x6e\x49\x10\xc4\x3f\x78\x88\x03\xfc\x75\xb8\x2e\x54\x6b\x62\xe3\x9b\x44\xb4\xa0\xf2\x87\x85\x69\xb4\x34\x58\x8b\x3a\x60\x1c\x20\xe9\x69\xfc\x0c\x55\xea\xe7\x8b\x74\xcb\x65\x3e\x10\xfa\xbb\x4a\x32\x7f\xc2\x99\xd6\x78\xe4\xb5\x7c\x5b\xa5\x46\x09\x65\x38\x45\xf8\x62\x23\x69\xc9\x59\x68\x6d\x64\xf9\x7d\x38\xf4\xcb\xab\x81\x86\xe9\x50\xd8\x14\x86\x4b\xcb\x8b\x1b\x67\x9f\x4b\x23\xe5\x8f\x90\xe8\x5f\xd3\xca\x3e\x9f\xa3\x6e\xe0\x41\x51\x11\xfe\x33\x2c\xd3\x05\xfe\x56\xd9\x52\xd9\x8b\xf3\x81\x6b\x82\x4b\x07\x05\x18\x8c\x70\xfb\x48\x96\xdc\xeb\xef\xd5\x78\x3c\x1e\xc7\x6f\x7a\x87\x4e\xd1\x1b\xff\x1b\x66\x8e\x05\xfc\x7c\xd9\xb9\x15\xf2\x25\xee\xde\x5c\x4f\x63\xed\x38\x5f\x1e\x37\x57\x40\x8a\x30\x33\xbc\xdb\xff\xbf\x42\x99\xcf\xe5\x1d\x21\xb5\x5a\x81\x69\x38\x1f\x6c\xfb\x83\x12\xbe\x14\x6a\x49\xc5\x85\x62\x95\xcf\xfe\xe2\x3c\xe8\x18\x21\x90\xfe\x19\x25\xb4\x72\xaa\xa4\x8e\x33\xb2\xa2\x5c\xa8\x75\x10\xb5\x33\x15\x44\x2f\xa6\xa4\xe5\xd6\x81\x64\x1b\xa2\x95\xe0\x6c\x93\xd8\xde\x35\x0a\x58\x83\x68\x0f\x3d\x57\x95\xcc\x21\x9f\x3b\x2a\x40\x82\xb5\xb8\xd9\x54\xd2\xbb\x40\xb5\x59\x53\x41\xb8\xf4\x0f\xa9\x92\xb9\x0d\x42\xe8\x39\xd9\xed\x5e\xa2\x0d\xac\xf8\x5d\x44\x7e\x9d\xb4\x52\xc7\xf8\x0a\x50\xa4\x29\x50\x1b\xd9\x7e\xcd\x9e\x5a\x31\xff\xdb\x32\x42\xb4\xe1\xca\x70\xb7\x41\xa7\x68\x7b\xfa\xa0\x3e\x57\xe9\xb6\xf0\x2d\xfe\x73\x2f\xd6\x0f\xfb\xda\xdf\x3b\x8f\x3c\x21\xbf\xe0\x8e\xfc\x49\x9c\xee\x2d\xd0\x7b\x01\xfc\x24\x33\x80\xb1\xeb\x16\x51\xd2\x10\xb4\x7d\xdd\x99\x92\x12\x22\x65\xf1\xf5\xe9\x63\xec\x0c\x01\x11\x42\x1b\x5e\x52\xb3\xd9\xdf\x1b\x90\xd3\x00\xeb\x71\xfe\x7d\x1d\xa4\x1e\x03\x89\x73\x73\x92\x08\x3e\xbb\xbe\xbe\x9a\xce\xaf\x2e\xff\x5a\xcc\xc9\xd5\x74\xbe\x98\x7d\xfa\x30\x99\x2e\xce\x16\x57\x1f\xa7\xef\x27\x5f\xf0\x5e\x26\x7b\xf7\x75\xca\x46\x5a\x67\x42\x5b\x45\xeb\x2d\x6c\x92\x7c\xf0\xbb\x4f\xd3\xb7\x1e\x6e\x4e\x3e\x7f\x9c\xbd\x9f\xcc\xc8\xec\xd3\x74\x71\xf5\x61\x82\x3b\x23\x58\x1a\x60\xd3\x96\x23\xb4\xb8\xe1\x16\x15\xca\xd3\xe0\x14\x62\x37\x54\x16\x80\xb8\x74\x0a\x7d\x9e\x9c\xcf\xaf\x16\x13\x0f\x42\xde\xcd\x3e\x7e\x20\xd7\x67\x6f\xdf\x9f\x5d\x4e\xe2\x59\x87\xac\xb8\x3b\x13\xee\xfd\xab\x52\x47\x4b\xf7\xdf\x87\xfa\xa4\xbf\x96\xc8\xac\x4f\xd2\xc2\x8e\xb9\x1d\xf6\xd3\x7c\xb8\x3f\x5a\x3c\xaa\x06\xfc\xf2\xd0\x84\xbb\x67\x1e\x52\x02\xfe\x8a\x46\xf5\xe8\xbf\x00\x00\x00\xff\xff\x0c\x2e\x0c\x75\x23\x0f\x00\x00"),
		},
		"/terraform/cosmos/values.hcl": &vfsgen۰CompressedFileInfo{
			name:             "values.hcl",
			modTime:          time.Date(2018, 10, 8, 4, 49, 42, 668071870, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\xc8\x5b\x68\xbc\x40\x2c\x40\xe2\x0a\x88\x1b\x44\x93\xe4\xe3\xba\x4d\x3c\xd1\x78\xdc\x52\x45\xb9\x3b\xaa\x2a\x54\x02\x95\x60\x3f\xff\xbf\xf7\xe7\xc0\x1a\xb9\x1d\x40\x0e\xe9\x10\x55\xd2\x88\x64\x4d\xcb\x19\x4d\xe2\x11\x8e\xe6\x8a\xa8\xc7\x3b\x97\xc1\xe8\x85\xdc\x3c\xd7\x6f\xdc\xed\x39\xe0\x95\x47\x2c\x8b\xab\x96\xea\xda\xa1\xc8\x52\xb4\x43\x13\x54\xca\xf4\x67\x78\xa3\xc1\x91\xf7\xd4\x9e\xbe\xae\xee\x69\x5d\x41\x31\x93\x6d\x41\x37\xe5\xe8\x8e\x36\x1a\xaa\xa5\x5a\x19\x4c\x92\xa3\x89\x9e\x2e\x77\x45\xe3\x45\x63\x25\xb2\x35\x9b\xf2\xb3\xf7\xd9\x34\xee\x91\xcf\x21\x3c\x01\xbb\xc7\x8f\x87\xba\x1d\xa4\xad\x3b\x51\xd4\xc7\x98\x7a\x39\xe6\x3a\xc1\xfc\xb5\xd7\xbb\x35\x71\x90\x8e\x2d\x4a\xfa\xb5\x76\xc7\x13\x27\x70\xb6\x1f\x01\xe3\xf0\xff\xdf\x7e\x07\x71\x0a\x85\x03\x6e\xec\xe9\xc5\x12\xce\x9c\xcf\x00\x00\x00\xff\xff\x75\x91\xd9\x7b\xcf\x01\x00\x00"),
		},
		"/terraform/cosmosSearch": &vfsgen۰DirInfo{
			name:    "cosmosSearch",
			modTime: time.Date(2018, 10, 7, 0, 4, 34, 940465048, time.UTC),
		},
		"/terraform/cosmosSearch/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 7, 0, 5, 6, 261172273, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x2c\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74\x2c\x20\x43\x6f\x73\x6d\x6f\x73\x44\x42\x2c\x20\x41\x7a\x75\x72\x65\x20\x53\x65\x61\x72\x63\x68"),
		},
		"/terraform/servicebus": &vfsgen۰DirInfo{
			name:    "servicebus",
			modTime: time.Date(2018, 10, 7, 0, 5, 16, 384351494, time.UTC),
		},
		"/terraform/servicebus/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 7, 0, 5, 57, 679529715, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x2c\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74\x2c\x20\x61\x6e\x64\x20\x53\x65\x72\x76\x69\x63\x65\x20\x42\x75\x73"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/.DS_Store"].(os.FileInfo),
		fs["/terraform"].(os.FileInfo),
	}
	fs["/terraform"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/.DS_Store"].(os.FileInfo),
		fs["/terraform/basic"].(os.FileInfo),
		fs["/terraform/cosmos"].(os.FileInfo),
		fs["/terraform/cosmosSearch"].(os.FileInfo),
		fs["/terraform/servicebus"].(os.FileInfo),
	}
	fs["/terraform/basic"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/basic/NOTE.txt"].(os.FileInfo),
		fs["/terraform/basic/manifest.yaml"].(os.FileInfo),
		fs["/terraform/basic/template.description"].(os.FileInfo),
		fs["/terraform/basic/terraform.tf"].(os.FileInfo),
		fs["/terraform/basic/values.hcl"].(os.FileInfo),
	}
	fs["/terraform/cosmos"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/cosmos/NOTE.txt"].(os.FileInfo),
		fs["/terraform/cosmos/manifest.yaml"].(os.FileInfo),
		fs["/terraform/cosmos/template.description"].(os.FileInfo),
		fs["/terraform/cosmos/terraform.tf"].(os.FileInfo),
		fs["/terraform/cosmos/values.hcl"].(os.FileInfo),
	}
	fs["/terraform/cosmosSearch"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/cosmosSearch/template.description"].(os.FileInfo),
	}
	fs["/terraform/servicebus"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/servicebus/template.description"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
